if TpBase == true then do
    --//get user name so it can check!
    -- Get the LocalPlayer and their username
local player = game:GetService("Players").LocalPlayer
local username = player.Name

if game:GetService("Workspace").TycoonA.OwnerName == username then

    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-101.543892, 2.94321942, 291.404236, 1, 0, 0, 0, 1, 0, 0, 0, 1)
    else
        if game:GetService("Workspace").TycoonB.OwnerName.Value == username then
    
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(150.456116, 2.98181915, 291.454926, 1, 0, 0, 0, 1, 0, 0, 0, 1)
        else
            if game:GetService("Workspace").TycoonC.OwnerName.Value == username then
    
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(410.156097, 2.96592021, 291.632782, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            else
                if game:GetService("Workspace").TycoonD.OwnerName.Value == username then
    
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(667.256104, 2.9726212, 291.630676, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                else
                    if game:GetService("Workspace").TycoonE.OwnerName.Value == username then
    
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(651.475525, 2.97750616, 212.660538, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                    else
                        if game:GetService("Workspace").TycoonF.OwnerName.Value == username then
    
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(396.475525, 2.98027849, 212.671448, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                        else
                            if game:GetService("Workspace").TycoonG.OwnerName.Value == username then
    
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(134.775543, 2.94321942, 212.650269, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                            else
                                if game:GetService("Workspace").TycoonH.OwnerName.Value == username then
    
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-115.324463, 2.94321942, 212.650269, -1, 0, 0, 0, 1, 0, 0, 0, -1)
            end
        end
    end
end
end
end
end
end
end
end

if GainBase == true then
if game:GetService("Workspace").TycoonA.OwnerName == "" then
    print("tycoon A")
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-101.543892, 2.94321942, 291.404236, 1, 0, 0, 0, 1, 0, 0, 0, 1)
    else
        if game:GetService("Workspace").TycoonB.OwnerName.Value == "" then
        print("tycoon B")
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(150.456116, 2.98181915, 291.454926, 1, 0, 0, 0, 1, 0, 0, 0, 1)
        else
            if game:GetService("Workspace").TycoonC.OwnerName.Value == "" then
            print("tycoon C")
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(410.156097, 2.96592021, 291.632782, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            else
                if game:GetService("Workspace").TycoonD.OwnerName.Value == "" then
                print("tycoon D")
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(667.256104, 2.9726212, 291.630676, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                else
                    if game:GetService("Workspace").TycoonE.OwnerName.Value == "" then
                    print("tycoon E")
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(651.475525, 2.97750616, 212.660538, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                    else
                        if game:GetService("Workspace").TycoonF.OwnerName.Value == "" then
                        print("tycoon F")
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(396.475525, 2.98027849, 212.671448, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                        else
                            if game:GetService("Workspace").TycoonG.OwnerName.Value == "" then
                            print("tycoonb G")
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(134.775543, 2.94321942, 212.650269, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                            else
                                if game:GetService("Workspace").TycoonH.OwnerName.Value == "" then
                                print("tycoon H")
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-115.324463, 2.94321942, 212.650269, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                                end
                            end
                        end
                    end
                end
            end
        end
end
end